# name: linting, testing, and building
# run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
# on: 
#   push: 
#     branches: [main]
#   pull_request:
#     branches: [main]
# jobs:
#   pipepline:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [20.x]
#     steps:
#     - uses: actions/checkout@v1
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v1
#       with:
#         node-version: ${{ matrix.node-version }}
#     - name: Install dependencies 
#       run: npm ci 
#     - name: Build production project
#       run: npm run build:prod
#     - name: Linting 
#       run: npm run lint
#       if: always()
#     - name: Stylelint
#       run: npm run stylelint
#       if: always()
#     - name: Unit testing
#       run: npm run test
#       if: always()
#     - name: Type checking
#       run: npm run type-check
#       if: always()
#     # - name: Build storybook
#     #   run: npm run build-storybook
#     #   if: always()
#     # - name: Ui update
#     #   run: npx loki update --reactUri="file:./storybook-static" --skipStories="Loader"
#     #   if: always()
#     # - name: Screeenshot testing
#     #   run: npm run test:screenshot
#     #   if: always()

name: linting, testing, building
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
permissions:
  contents: write
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: true
jobs:
  build-and-ui-testing:
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    strategy:
      matrix:
         node-version: [20.x]
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm ci
      - name: build production project
        run: npm run build:prod
        if: always()
      - name: build storybook
        run: npm run storybook:build
      # if: always()
      # TODO: fix loki static        
      # - name: screenshot testing
      #   run: npm run test:screenshot
        if: always()
      - name: Generate HTML report
        run: npm run test:ui:report
        if: always()
      - name: Setup Pages
        uses: actions/configure-pages@v2
        if: always()
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        if: always()
        with:
          path: '.loki'
      - name: Deploy to GitHub Pages
        id: deployment
        if: always()
        uses: actions/deploy-pages@v1

  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
          node-version: [20.x]
    steps:
      - uses: actions/checkout@v1
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm ci
      - name: linting typescript
        run: npm run lint
        if: always()
      - name: linting css
        run: npm run stylelint
      - name: unit testing
        if: always()
        run: npm run test
